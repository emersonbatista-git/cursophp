******* VARIAVEIS E CONSTANTES *******

$nome = "Emerson";
$sobrenome = "Santos";

const PAIS = "Brasil";

echo "Muito prazer, $nome $sobrenome! Voce mora no " . PAIS;


=======    REGRAS PARA IDENTIFICADORES ======
- Variaveis sem pre começam com o simbolo $
- O segundo pode ser letra ou simbolo de underline _
- Aceita caracteres [a-z], [A-Z], [0 - 9] e [_]
- Aceita caracteres da tabela ASCII a partir de 128
- Aceita caracteres acentuados 
- A linguagem é case sensitive em relação a nomes, faz distinção de maiusculas e minusculas
- Nomes especiais como $this nao podem ser usados, sao nomes reservados no PHP


======= RECOMENDAÇÕES ========
- Tente dar nomes claros e de facil identificações
- Evite nomes muito curtos ou muito longos
- Defina um padrao e siga em todo o projeto
- Para variaveis, de preferencia a letras minusculas
- Para constantes, de preferencia para letras maiusculas
- Use camelCase para metodos e atributos ($nomeCompletoCliente)
- Use SNAKE_CASE para nomear constantes ($telefone_contato_fornecedor)


***** TIPOS PRIMITIVOS *****

string           - sequencia de letras, numeros e simbolos, sempre representados entre aspas
int ou integer   - Um valor numerico inteiro, aquele que vem sem a parte decimal
float ou double  - Um valor numerico real, que vem com a parte decimal, depois do ponto flutuante
bool ou boolean  - Um valor logico ou Booleano, que aceita apenas os valores verdadeiro ou falso (true ou false) 


- Escalares

$sobrenome          $idade     $peso             $casado
Silva (string)      34 (int)   85.9 (float)       true (bool)

Podemos utilizar a coerção, informando antes da variavel

$num = (int) "950"; neste caso seria string por estar entre aspas, mas forcei para int


- Compostos

array
object


- Especiais

null
resource
callabe
mixed



******* STRINGS ******

"" - double quoted tem a interpretação do conteudo, se utilizar codigo de emoji ou  variavel por exemplo, irá exibir o emoji ou o resultado da variavel
'' - single quoted nao tem interpretação do conteudo, se utilizar codigo de emoji por exemplo, irá exibir o codigo e nao o simbolo.
   - Heredoc - pouco utilizadas
   - Nowdoc - pouco utilizadas
.  - Operador de ponto é o operador de concatenação.

No caso quando houver const não irá exibir na tela com aspas simples e nem duplas, por nao haver o $ indicando variavel, neste caso tem que utilizar a concatenação
Exemplo: 
const ESTADO = "SP",
echo "Moro no " . ESTADO;

Nao podemos utilizar aspas duplas dentro de aspas duplas e nem aspas simples dentro de aspas simples, mas se utiliar aspas duplas pode utilizar dentro aspas simples
e vice e versa. No exemplo abaixo para exibir corretamente teria que utilizar saida de escape

$nom = "Rodigo";
$snom = "Nogueira";

echo "$nom \"Minotauto\" $snom";

Exemplo de ESCAPE SEUQUENCES

\n     nova linha
\t     tabulação horizontal
\\     barra invertida
\$     Mostrar o sinal de sifrao
\u{}   codigos unicodes


**** OPERADORES ARITIMETICOS *******

No PHP se somar dois numeros entre aspas ele irá converter para int e somar.
Sao chamados de operandos os numeros que estão antes e depois dos operadores.

+ - Adição
- - Subtração
* - Multiplicação
/ - Divisão
% - Modulo (resto de divisão)
** - Exponenciação 

ORDEM DE PRECEDENCIA


()     - Nao é um operador, mas muda a ordem de execução
**
* / %
+ -


********* FUNÇÕES MATEMATICAS ********

abs()            - Retorna o valor absoluto, é o valor sem o sinal de mais ou de menos
base_convert()   - Converte para tipos diferentes de base, exemplo 256 para base exadecimal seria fe, para binario seria 11111110
round()          - Arredonda pela regra da matematica
ceil()           - Arredonda sempre para cima
floor()          - Arredeonda sempre para baixo
hypot()          - Calcula o tamanho da hipotenusa
intdiv()         - Faz a divisao inteira, 5 / 2 seria o resultado 2
min()            - Mostra o valor minimo de uma sequencia
max()            - Mostra o valor maximo de uma sequencia
pi()             - Valor de PI, pode mostrar tambem por uma constante existente M_PI
pow()            - Função de potencia ou utilizar **, exemplo pow(5 * 2)
sin()            - Calcular seno
cos()            - Calcular cosceno
tan()            - Calcular tangente
sqrt()           - Calcular raiz quadrada, pode utilizar tambem por potencia que resolveria no caso de raiz cubica, $r = 27 ** (1/3);


***** GERAR NUMEROS ALEATORIOS *******
Mais simples:
rand()

$min = 0;
$max = 100;

$num = rand($min, $max);   /*pode informar direto sem variaveis $num = rand(0, 100);  */

Mais moderno e 4 vezes mais rapido, recomendada
mt_rand()

Numeros criptografados
random_int()


******* SUPERGLOBAIS ********

$_GET         - Recebe dados apenas por GET
$_POST        - Recebe dados apenas por POST
$_REQUEST     - Recebe dados das duas formas anteriores, inclusive simultaneo, formando um unico array
$_COOKIES     - Aremazena os cookies de navegação de sua aplicação
$_FILES       - Lê um arquivo, exemplo: importar um arquivo NFe XML
$_SESSION     - Permite utilizar variaveis entre a nevagação
$_ENV         - Variaveis de ambiante de servidor
$_SERVER      - Mostra dados do servidor
$GLOBALS      - Agrupa todas as superglobais


********** FORMULARIO PHP RETROALILMENTADO *********

<body>
      
     <?php 
     $valor1 = $_GET['v1'] ?? 0;
     $valor2 = $_GET['v2'] ?? 0;
     
     
     ?>

   <main>
    <h1>Somador de valores</h1>
    <form action="<?=$_SERVER['PHP_SELF']?>" method="get">  //<?=$_SERVER['PHP_SELF']?> comando para enviar para ele mesmo
        <label for="v1">Valor 1</label>
        <input type="number" name="v1" id="v1" value="<?=$valor1?>">  //"<?=$valor1?>" substitui o echo quando é apenas printar uma variavel
        <label for="v2">Valor 2</label>
        <input type="number" name="v2" id="v2" value="<?=$valor1?>">
         <input type="submit" value="Somar">


    </form>
 
        
</main>

<section id="resultado">
    <h2>Resultado Soma</h2>
    <?php 
    $soma = $valor1 + $valor2;
    print "<p>A soma entre os valores $valor1 e $valor2 é igual a $soma</p>"
    
    ?>

</section>
   
     
</body>






 

 


 










